public long save(final byte[] imageBytes, final HttpServletRequest request) throws XException {
        return RunWrapper.run(new Callable<Long>() {
            @Override
            public Long call() throws Exception {
                final StringBuffer fileName = new StringBuffer()
                        .append(DateUtils.currentDate())
                        .append("_").append(Tool.getUUID32())
                        .append(".").append(Config.IMAGE_TYPE);
                Upload upload = new Upload() {
                    @Override
                    protected byte[] getBytes() {
                        return imageBytes;
                    }
                    @Override
                    protected String getKey() {
                        return fileName.toString();
                    }
                    @Override
                    protected String getBucketName() {
                        return CloudConfig.BUCKET_IMAGE_AVATAR;
                    }
                };
                upload.service();
                String pictureURL = new StringBuffer()
                        .append(CloudConfig.CLOUD_IMAGE_AVATAR_URL)
                        .append("/")
                        .append(fileName)
                        .toString();
                PictureDO picture = new PictureDO();
                picture.setUrl(CloudConfig.PROTOCAL+pictureURL);
                picture.setGmtCreate(new Date());
                return pictureManager.save(picture);

            }
        });
    }